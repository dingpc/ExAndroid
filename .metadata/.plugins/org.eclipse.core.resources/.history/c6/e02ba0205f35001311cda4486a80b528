package com.dpc.provider;

import android.content.ContentProvider;
import android.content.ContentValues;
import android.content.UriMatcher;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.net.Uri;

public class HelloContentProvider extends ContentProvider {
	
	private static final UriMatcher um = new UriMatcher(UriMatcher.NO_MATCH);
	private SQLiteDatabase sqLite;
	
	@Override
	public boolean onCreate() {
		um.addURI("com.dpc.provider.books", "book", 1);
		sqLite = SQLiteDatabase.openDatabase("/data/data/com.dpc.provider/providerdb", 
				null, 
				SQLiteDatabase.OPEN_READWRITE|SQLiteDatabase.CREATE_IF_NECESSARY);
		sqLite.execSQL("create table books ([id] integer primary key autoincrement not null, [bookname] varchar(30) not null)");
		ContentValues cv = new ContentValues();
		cv.put("bookname", "自学成才");
		sqLite.insert("books", null, cv);
		return false;
	}
	
	@Override
	public Cursor query(Uri uri, String[] projection, String selection,
			String[] selectionArgs, String sortOrder) {
		if(um.match(uri) == 1) {
			Cursor cursor = sqLite.query("books", null, null, null, null, null, null);
			return cursor;
		} else {
			return null;
		}
	}
	
	@Override
	public int delete(Uri arg0, String arg1, String[] arg2) {
		return 0;
	}

	@Override
	public String getType(Uri uri) {
		return null;
	}

	@Override
	public Uri insert(Uri uri, ContentValues values) {
		return null;
	}
	
	@Override
	public int update(Uri uri, ContentValues values, String selection,
			String[] selectionArgs) {
		if(um.match(uri) == 1) {
			int result = sqLite.update("books", values, null, null);
			return result;
		}
		return 0;
	}
}
